datasource db {
  provider = "postgres"
  url      = "postgresql://jeffhampton:postgres@localhost:5432/redwood"
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model User {
  id         Int         @id @default(autoincrement())
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @default(now())
  email      String      @unique
  name       String
  password   String?
  items      Item[]
  categories Category[]
  rooms      Room[]
  containers Container[]
  images     Image[]
}

model Room {
  id         Int         @id @default(autoincrement())
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @default(now())
  name       String      @unique
  user       User        @relation(fields: [userId], references: [id])
  userId     Int
  items      Item[]
  containers Container[]
}

model Container {
  id                Int        @id @default(autoincrement())
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @default(now())
  name              String     @unique
  user              User       @relation(fields: [userId], references: [id])
  userId            Int
  items             Item[]
  room              Room?      @relation(fields: [roomId], references: [id])
  roomId            Int?
  parentContainerId Int?       @unique
  parentContainer   Container? @relation("Nesting", fields: [parentContainerId], references: [id])
  childContainers   Container? @relation("Nesting")
}

model Category {
  id        Int                @id @default(autoincrement())
  createdAt DateTime           @default(now())
  updatedAt DateTime           @default(now())
  name      String             @unique
  color     String?
  user      User               @relation(fields: [userId], references: [id])
  userId    Int
  items     CategoriesOnItem[]
}

model Image {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  caption   String?
  url       String
  item      Item     @relation(fields: [itemId], references: [id])
  itemId    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}

model Item {
  id           Int                @id @default(autoincrement())
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @default(now())
  name         String
  description  String?
  value        String?
  serialNumber String?
  quantity     String?
  images       Image[]
  user         User               @relation(fields: [userId], references: [id])
  userId       Int
  categories   CategoriesOnItem[]
  room         Room?              @relation(fields: [roomId], references: [id])
  roomId       Int?
  container    Container?         @relation(fields: [containerId], references: [id])
  containerId  Int?
}

model CategoriesOnItem {
  id         Int      @id @default(autoincrement())
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])
  itemId     Int
  item       Item     @relation(fields: [itemId], references: [id])

  @@unique([categoryId, itemId])
}
